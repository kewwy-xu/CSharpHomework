<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>常哥说编程 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/classicblue/bundle-classicblue.min.css?v=C_xOBodTdu7qViYoEOWb5uyE0XIl-SuwRkgFEwSDOCc" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/classicblue/bundle-classicblue-mobile.min.css?v=ADiCwO2hOTdd5yYidcx7eob7ix2VJI4o_TXjEycTHjs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/xiketang/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/xiketang/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/xiketang/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=z6JkvKQ7L_bGD-nwJExYzsoFf5qnluqZJru6RsfoZuM"></script>
    <script>
        var currentBlogId = 451887;
        var currentBlogApp = 'xiketang';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'ClassicBlue';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/xiketang/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/xiketang/">常哥说编程</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/xiketang/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E5%B8%B8%E5%93%A5%E8%AF%B4%E7%BC%96%E7%A8%8B">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/xiketang/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
7&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
10</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/xiketang/archive/2020/04/24.html">2020年4月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/xiketang/p/12768088.html">
    女屌丝前端逆袭记（二）之盒子模型
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：女屌丝又来为你分享前端技术鸡汤啦！上一篇，简单的分享了float的使用以及注意事项，这一次给你分享点什么呢？？作为前端开发工程师，你觉得你还必须掌握的是什么呢？是不是想到了-盒子模型。对，就是它，这可谓是布局中的核心。通过上一篇我们认识了float，它能帮我们改变元素性质，能帮助我们让元素并排显示并            <a href="https://www.cnblogs.com/xiketang/p/12768088.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-24 16:06 常哥说编程 阅读 (5) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12768088" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/xiketang/p/12768020.html">
    女屌丝前端逆袭记（一）之浅谈float
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：提到前端，相信作为开发者的你或是正在看这篇文章的你并不陌生。前端可以说是直接与用户打交道的一个端口，不论是页面前端亦或是后端界面的前端，都是直接与用户对接的，因此前端设计对于一个网站或管理系统，都是至关重要的。一个好的前端能给用户视觉上的冲击，比如电商、门户等网站；也能给用户带去很好的体验，比如办公            <a href="https://www.cnblogs.com/xiketang/p/12768020.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-24 15:59 常哥说编程 阅读 (64) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12768020" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/xiketang/archive/2020/04/23.html">2020年4月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/xiketang/p/12762554.html">
    .NET Core3.1总体预览和第一个Core程序的创建
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：小伙伴们大家好！欢迎阅读本贴，这里是常哥说编程的专栏，.NetCore已经出来一段时间了，很多小伙伴可能也开始了学习，但是.NetCore毕竟在学习上和我们常用的.NET Framework还是有很大差别的，为了帮助大家能尽快的进入.NetCore的开发，常哥把在喜科堂讲解的关于Core的内容都做了            <a href="https://www.cnblogs.com/xiketang/p/12762554.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-23 17:59 常哥说编程 阅读 (423) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12762554" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/xiketang/p/12760244.html">
    基于Snap7实现与西门子PLC通信
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：如果你对西门子PLC通信或者上位机开发稍微有一点研究的话，应该对Snap7有所耳闻。 Snap7是一个基于以太网与西门子S7系列PLC通信的开源库，在世界领域应用很广。但也许是因为资料比较少，而且很多都是纯英文，在国内反而没有大规模的应用。 作为一个技术开发人员，所有未知领域的事物都是值得探索的。于            <a href="https://www.cnblogs.com/xiketang/p/12760244.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-23 13:36 常哥说编程 阅读 (35) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12760244" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/xiketang/p/12759544.html">
    小白学习倍福的必经之路
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：最近因为一些学员的要求，研究了一下倍福PLC。很早就听说过倍福，虽然和西门子同样属于德国的品牌，但是两者走的路线和风格却截然不同，西门子不管是推广还是市场占有率方面都要高于倍福，但是倍福也有它的优势，它是EtherCAT总线的先驱者，基于通用的Windows系统，很早就提出了软PLC这样的概念，连编            <a href="https://www.cnblogs.com/xiketang/p/12759544.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-23 11:26 常哥说编程 阅读 (15) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12759544" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/xiketang/archive/2020/04/22.html">2020年4月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/xiketang/p/12750806.html">
    S7通信协议之你不知道的事儿
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在电气学习的路上，西门子PLC应该是我的启蒙PLC，从早期的S7-300/400 PLC搭建Profibus-DP网络开始接触，到后来的S7-200Smart PLC，再到现在的S7-1200/1500 PLC博途软件，基本上西门子的每款PLC都接触并使用过。 在上位机开发的路上，西门子PLC也一直            <a href="https://www.cnblogs.com/xiketang/p/12750806.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-22 11:22 常哥说编程 阅读 (162) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12750806" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/xiketang/archive/2020/04/21.html">2020年4月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/xiketang/p/12745178.html">
    .NetCore程序在Linux上面部署的实现
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：我们知道.NetCore能够实现跨平台的根本就是内置Kestrel服务器实现请求处理和不同操作系统上反向代理的实现。在windows操作系统上IIS反向代理配置非常简单。但是Linux上就较为麻烦了。今天常老师在这里就给朋友们详细聊一下在Linux上面实现.NetCore程序部署的完整过程，对于做.            <a href="https://www.cnblogs.com/xiketang/p/12745178.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-21 15:52 常哥说编程 阅读 (431) 评论 (10)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12745178" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 常哥说编程
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>
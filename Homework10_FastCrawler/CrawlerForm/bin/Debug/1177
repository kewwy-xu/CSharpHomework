<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta property="og:description" content="背景 本文我们将开一下脑洞，在 ReactNative 工程基础上下集成及运行小程序方案。 先看一下效果如下: 环境搭建 npm&amp;#160;install&amp;#160;-g&amp;#160;react-nat" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>深入小程序系列（三） ReactNative和小程序混编 - 林克死大头 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=hlpQ1CJDwwJXDxv2HNauUmW3NjyWzoMaw1uER19SLT0" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=XjHfryC9ctsatIZz1dHn7TsRIqmwz9c3aj_6SCfHSDM" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/Linkk/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/Linkk/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/Linkk/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=z6JkvKQ7L_bGD-nwJExYzsoFf5qnluqZJru6RsfoZuM"></script>
    <script>
        var currentBlogId = 594278;
        var currentBlogApp = 'Linkk';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'CodingLife';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/Linkk/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/Linkk/">林克link</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/Linkk/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E6%9E%97%E5%85%8B%E6%AD%BB%E5%A4%A7%E5%A4%B4">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/Linkk/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
5&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
0</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/Linkk/p/12770056.html">深入小程序系列（三） ReactNative和小程序混编</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body ">
    <h2>背景</h2>
<p>本文我们将开一下脑洞，在 ReactNative 工程基础上下集成及运行小程序方案。</p>
<p>先看一下效果如下:</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src="http://blog.itpub.net/ueditor/php/upload/image/20200417/1587127339818758.gif" alt=""></p>
<h2>环境搭建</h2>
<pre class="brush:cpp;toolbar:false">npm&nbsp;install&nbsp;-g&nbsp;react-native-cli&nbsp;yarn</pre>
<p>&nbsp;</p>
<p>官方的<a href="https://link.zhihu.com/?target=https%3A//reactnative.dev/docs/environment-setup" target="_blank">环境搭建文档</a>已经有详细的说明，这里不再重复。大家可以看下我本地的环境配置版本，目前整个项目运行稳定，可以借鉴。</p>
<pre class="brush:cpp;toolbar:false">$&nbsp;react-native&nbsp;info<br />info&nbsp;Fetching&nbsp;system&nbsp;and&nbsp;libraries&nbsp;information...System:<br />&nbsp;&nbsp;&nbsp;&nbsp;OS:&nbsp;macOS&nbsp;10.15.3<br />&nbsp;&nbsp;&nbsp;&nbsp;CPU:&nbsp;(8)&nbsp;x64&nbsp;Intel(R)&nbsp;Core(TM)&nbsp;i7-4770HQ&nbsp;CPU&nbsp;@&nbsp;2.20GHz<br />&nbsp;&nbsp;&nbsp;&nbsp;Memory:&nbsp;93.87&nbsp;MB&nbsp;/&nbsp;16.00&nbsp;GB<br />&nbsp;&nbsp;&nbsp;&nbsp;Shell:&nbsp;3.2.57&nbsp;-&nbsp;/bin/bash<br />&nbsp;&nbsp;Binaries:<br />&nbsp;&nbsp;&nbsp;&nbsp;Node:&nbsp;10.20.1&nbsp;-&nbsp;~/.nvm/versions/node/v10.20.1/bin/node<br />&nbsp;&nbsp;&nbsp;&nbsp;Yarn:&nbsp;1.22.4&nbsp;-&nbsp;~/.nvm/versions/node/v10.20.1/bin/yarn<br />&nbsp;&nbsp;&nbsp;&nbsp;npm:&nbsp;6.14.4&nbsp;-&nbsp;~/.nvm/versions/node/v10.20.1/bin/npm<br />&nbsp;&nbsp;&nbsp;&nbsp;Watchman:&nbsp;Not&nbsp;Found<br />&nbsp;&nbsp;Managers:<br />&nbsp;&nbsp;&nbsp;&nbsp;CocoaPods:&nbsp;1.9.1&nbsp;-&nbsp;/usr/local/bin/pod<br />&nbsp;&nbsp;SDKs:<br />&nbsp;&nbsp;&nbsp;&nbsp;iOS&nbsp;SDK:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Platforms:&nbsp;iOS&nbsp;13.4,&nbsp;DriverKit&nbsp;19.0,&nbsp;macOS&nbsp;10.15,&nbsp;tvOS&nbsp;13.4,&nbsp;watchOS&nbsp;6.2<br />&nbsp;&nbsp;&nbsp;&nbsp;Android&nbsp;SDK:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;API&nbsp;Levels:&nbsp;26,&nbsp;28,&nbsp;29<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Build&nbsp;Tools:&nbsp;28.0.3,&nbsp;29.0.2,&nbsp;29.0.3,&nbsp;30.0.0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System&nbsp;Images:&nbsp;android-26&nbsp;|&nbsp;Google&nbsp;Play&nbsp;Intel&nbsp;x86&nbsp;Atom<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Android&nbsp;NDK:&nbsp;Not&nbsp;Found<br />&nbsp;&nbsp;IDEs:<br />&nbsp;&nbsp;&nbsp;&nbsp;Android&nbsp;Studio:&nbsp;3.6&nbsp;AI-192.7142.36.36.6241897<br />&nbsp;&nbsp;&nbsp;&nbsp;Xcode:&nbsp;11.4/11E146&nbsp;-&nbsp;/usr/bin/xcodebuild<br />&nbsp;&nbsp;Languages:<br />&nbsp;&nbsp;&nbsp;&nbsp;Java:&nbsp;10.0.1&nbsp;-&nbsp;/Library/Java/JavaVirtualMachines/jdk-10.0.1.jdk/Contents/Home/bin/javac<br />&nbsp;&nbsp;&nbsp;&nbsp;Python:&nbsp;2.7.16&nbsp;-&nbsp;/usr/bin/python<br />&nbsp;&nbsp;npmPackages:<br />&nbsp;&nbsp;&nbsp;&nbsp;@react-native-community/cli:&nbsp;Not&nbsp;Found<br />&nbsp;&nbsp;&nbsp;&nbsp;react:&nbsp;16.11.0&nbsp;=&gt;&nbsp;16.11.0&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;react-native:&nbsp;0.62.2&nbsp;=&gt;&nbsp;0.62.2&nbsp;<br />&nbsp;&nbsp;npmGlobalPackages:<br />&nbsp;&nbsp;&nbsp;&nbsp;*react-native*:&nbsp;Not&nbsp;Found</pre>
<h2>新建 ReactNative 样例工程</h2>
<h3>新建 ReactNative 工程</h3>
<pre class="brush:cpp;toolbar:false">react-native&nbsp;init&nbsp;mopdemo</pre>
<p>稍等一会...</p>
<p>初始化项目完成之后，你可以选择两种不同的方式运行 App 在 iOS/Android 平台：</p>
<p>注意！ReactNative需要依赖本地安装对应的 iOS,Android 开发工具，即需要安装 Xcode 和 AndroidStudio。具体安装使用方法这里不赘述。</p>
<p>这里我们用 VSCode+Xcode 作为开发组合环境。</p>
<h3>集成小程序解析引擎</h3>
<p>这里我们采用凡泰集成免费社区版的小程序解析引擎，只需要 10 行代码量不到即可完成小程序集成。</p>
<p>&nbsp;</p>
<p>1、引入小程序引擎插件。在 package.json 文件中引入小程序 ReactNative 插件</p>
<pre class="brush:cpp;toolbar:false">"react-native-mopsdk":&nbsp;"^1.0.1"</pre>
<p>2、在 main.dart 文件中增加以下小程序引擎初始化方法。 Mop.instance.initialize 这里需要用到 sdkkey 和 secret。可以直接在<a href="https://link.zhihu.com/?target=https%3A//mp.finogeeks.com" target="_blank">https://mp.finogeeks.com</a>免费注册获取。注册使用方法可以参考<a href="https://link.zhihu.com/?target=https%3A//mp.finogeeks.com/mop/document/introduce/access/mechanism.html" target="_blank">接入指引</a></p>
<pre class="brush:cpp;toolbar:false">import&nbsp;MopSDK&nbsp;from&nbsp;'react-native-mopsdk';<br />//&nbsp;1.&nbsp;mop初始化<br />MopSDK.initialize({<br />&nbsp;&nbsp;&nbsp;&nbsp;appkey:&nbsp;'22LyZEib0gLTQdU3MUauASlb4KFRNRajt4RmY6UDSucA',<br />&nbsp;&nbsp;&nbsp;&nbsp;secret:&nbsp;'4a915e447bcbd439',<br />&nbsp;&nbsp;&nbsp;&nbsp;apiServer:&nbsp;'https://mp.finogeeks.com',<br />&nbsp;&nbsp;&nbsp;&nbsp;apiPrefix:&nbsp;'/api/v1/mop'<br />&nbsp;&nbsp;},&nbsp;(data)&nbsp;=&gt;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;console.log('message;',&nbsp;data);<br />&nbsp;&nbsp;});</pre>
<p>3、打开小程序</p>
<pre class="brush:cpp;toolbar:false">MopSDK.openApplet('appid','','',(data)=&gt;{});</pre>
<ul class="ul-level-0 list-paddingleft-2">
<li>
<p><strong>SDKKEY</strong>&nbsp;和&nbsp;<strong>Secret</strong>&nbsp;可以从前面部署的社区版的管理后台获取。</p>
</li>
<li>
<p><strong>apiServer</strong>&nbsp;为这里是小程序生态后端的服务地址也就是前文所输入的<code>IP:端口</code>。</p>
</li>
<li>
<p><strong>小程序id</strong>&nbsp;为在管理后台上架的小程序唯一ID(在小程序小架时自动生成)</p>
</li>
<li>
<p>上述的参数可以在前文服务器部署的后台界面上获取，亦可以在没有部署服务端的情况下在<a href="https://link.zhihu.com/?target=https%3A//mp.finogeeks.com/" target="_blank">https://mp.finogeeks.com</a>快速注册获取。</p>
</li>
<li>
<p>&nbsp;</p>
</li>
<li>
<p><strong>重要事情说三遍，您可以在官方的</strong><a href="https://github.com/finogeeks/mop-react-native-demo" target="_blank"><strong>github仓库</strong></a><strong>中查看示例代码</strong></p>
</li>
</ul>
<p><strong>&nbsp;</strong></p>
<p><strong>文章来源：凡泰小程序</strong></p>
<p><strong>&nbsp;</strong></p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-04-24 21:01</span>&nbsp;
<a href="https://www.cnblogs.com/Linkk/">林克死大头</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12770056" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12770056);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 594278, cb_blogApp = 'Linkk', cb_blogUserGuid = '40bd0478-6b03-4743-98ac-08d7d7b52bb0';
    var cb_entryId = 12770056, cb_entryCreatedDate = '2020-04-24 21:01', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 林克死大头
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>